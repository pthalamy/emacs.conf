;; Object LMParser/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "LMParser/"
  :tables
  (list
    (semanticdb-table "LMParser.c"
      :major-mode 'c-mode
      :tags 
        '( ("stdio.h" include (:system-flag t) nil [1 19])
            ("stdint.h" include (:system-flag t) nil [20 39])
            ("stdlib.h" include (:system-flag t) nil [40 59])
            ("string.h" include (:system-flag t) nil [60 79])
            ("LMParser.h" include nil nil [81 102])
            ("readType" function
               (:prototype-flag t
                :arguments 
                  ( ("pFile" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [430 442]))                  
                :type ("byte" type (:type "class") nil nil))
                nil [415 443])
            ("readTypeID" function
               (:prototype-flag t
                :arguments 
                  ( ("pFile" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [461 473])
                    ("typeArray" variable
                       (:dereference 1
                        :type ("byte" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [474 491]))                  
                :type ("byte" type (:type "class") nil nil))
                nil [444 492])
            ("skipNodeReferences" function
               (:prototype-flag t
                :arguments 
                  ( ("pFile" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [518 530]))                  
                :type "void")
                nil [493 531])
            ("sizeOfPredicateDescriptors" function
               (:prototype-flag t
                :arguments 
                  ( ("predicates" variable
                       (:dereference 1
                        :type ("Predicate" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [566 589])
                    ("numPreds" variable (:type ("byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [590 604]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [532 605])
            ("sizeOfRuleDescriptors" function
               (:prototype-flag t
                :arguments 
                  ( ("rules" variable
                       (:dereference 1
                        :type ("Rule" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [635 648])
                    ("numRules" variable (:type ("byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [649 663]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [606 664])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [677 686])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [687 700]))                  
                :type "int")
                nil [666 24147])
            ("readType" function
               (:arguments 
                  ( ("pFile" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24268 24280]))                  
                :type ("byte" type (:type "class") nil nil))
                nil [24253 25506])
            ("readTypeID" function
               (:arguments 
                  ( ("pFile" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25586 25598])
                    ("typeArray" variable
                       (:dereference 1
                        :type ("byte" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25599 25616]))                  
                :type ("byte" type (:type "class") nil nil))
                nil [25569 25686])
            ("skipNodeReferences" function
               (:arguments 
                  ( ("pFile" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25894 25906]))                  
                :type "void")
                nil [25869 26039])
            ("sizeOfRuleDescriptors" function
               (:arguments 
                  ( ("rules" variable
                       (:dereference 1
                        :type ("Rule" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26123 26136])
                    ("numRules" variable (:type ("byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26137 26151]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [26094 26269])
            ("sizeOfPredicateDescriptors" function
               (:arguments 
                  ( ("predicates" variable
                       (:dereference 1
                        :type ("Predicate" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26363 26386])
                    ("numPreds" variable (:type ("byte" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26387 26401]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [26329 26524]))          
      :file "LMParser.c"
      :pointmax 26525
      :fsize 26524
      :lastmodtime '(22449 35661 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "LMParser.h"
      :file "LMParser.h"
      :fsize 5419
      :lastmodtime '(22449 35661 0 0))
    (semanticdb-table "Makefile"
      :major-mode 'makefile-bsdmake-mode
      :tags 
        '( ("CC" variable (:default-value ("gcc")) nil [1 10])
            ("CFLAGS" variable (:default-value ("-Wall")) nil [10 25])
            ("all" function (:arguments ("LMParser")) nil [26 40])
            ("LMParser" function (:arguments ("LMParser.o")) nil [41 62])
            ("LMparser.o" function (:arguments ("LMParser.c" "LMParser.h")) nil [63 98])
            ("clean" function nil nil [99 133]))          
      :file "Makefile"
      :pointmax 133
      :fsize 132
      :lastmodtime '(22449 35661 0 0)
      :unmatched-syntax '((shell-command 107 . 132) (bol 106 . 106))))
  :file "!Users!pthalamy!Desktop!VSimRef!XCodeVS!VisibleSim2!utilities!LMParser!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
